{"version":3,"sources":["Event.js","EventList.js","mock-events.js","api.js","Alert.js","CitySearch.js","NumberOfEvents.js","App.js","serviceWorker.js","index.js"],"names":["Event","state","showDetails","handleShowDetails","setState","this","className","props","event","name","local_date","onClick","description","Component","EventList","events","map","key","id","mockEvents","created","duration","rsvp_limit","date_in_series_pattern","status","time","local_time","updated","utc_offset","waitlist_count","yes_rsvp_count","venue","lat","lon","repinned","address_1","city","country","localized_country_name","group","join_mode","urlname","who","localized_location","region","timezone","link","visibility","member_pay_fee","getSuggestions","query","a","window","location","href","startsWith","name_string","zip","getAccessToken","token","url","axios","get","result","data","getEvents","accessToken","localStorage","getItem","code","URLSearchParams","search","getOrRenewAccessToken","lastSavedTime","Date","now","type","tokenInfo","setItem","access_token","refresh_token","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","CitySearch","suggestions","infoText","handleInputChanged","value","target","then","length","handleItemClicked","updateEvents","onChange","placeholder","item","NumberOfEvents","numberOfEvents","App","page","defaultCity","response","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","atatus","install"],"mappings":"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","file":"static/js/main.388b0e72.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n  state = {\n    showDetails: false,\n  };\n\n  handleShowDetails = () => {\n    if (this.state.showDetails === false) {\n      this.setState({ showDetails: true });\n    } else {\n      this.setState({ showDetails: false });\n    }\n  };\n\n  render() {\n    const showDetails = this.state.showDetails;\n\n    return (\n      <div className=\"event\">\n        <div className=\"event__Overview\">\n          <p className=\"event__Overview--name\">{this.props.event.name}</p>\n          <p className=\"event__Overview--localDate\">\n            {this.props.event.local_date}\n          </p>\n          <button\n            className=\"details-btn\"\n            onClick={() => this.handleShowDetails()}\n          >\n            show details\n          </button>\n        </div>\n        {showDetails && (\n          <div className=\"event__Details\">\n            <p className=\"event__Details--description\">\n              {this.props.event.description}\n            </p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Event;\n","import React, { Component } from \"react\";\nimport Event from \"./Event\";\n\nclass EventList extends Component {\n  render() {\n    return (\n      <ul className=\"EventList\">\n        {this.props.events.map((event) => (\n          <li key={event.id}>\n            <Event event={event} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default EventList;\n","const mockEvents = {\n  city: {\n    id: 1007700,\n    city: \"MÃ¼nchen\",\n    lat: 48.14,\n    lon: 11.58,\n    state: \"\",\n    country: \"de\",\n    zip: \"meetup3\",\n    member_count: 1257,\n  },\n  events: [\n    {\n      created: 1563825339000,\n      duration: 9000000,\n      id: \"263370107\",\n      name: \"Microservices mit dem MicroProfile 3.x\",\n      rsvp_limit: 80,\n      date_in_series_pattern: false,\n      status: \"upcoming\",\n      time: 1566925200000,\n      local_date: \"2019-08-27\",\n      local_time: \"19:00\",\n      updated: 1563825339000,\n      utc_offset: 7200000,\n      waitlist_count: 79,\n      yes_rsvp_count: 80,\n      venue: {\n        id: 26266792,\n        name: \"adesso AG\",\n        lat: 53.54524230957031,\n        lon: 9.950983047485352,\n        repinned: false,\n        address_1: \"GroÃe ElbstraÃe 36\",\n        city: \"Hamburg\",\n        country: \"de\",\n        localized_country_name: \"Deutschland\",\n      },\n      group: {\n        created: 1387402147000,\n        name: \"Java User Group Hamburg\",\n        id: 11500362,\n        join_mode: \"open\",\n        lat: 53.54999923706055,\n        lon: 10,\n        urlname: \"jug-hamburg\",\n        who: \"Mitglieder\",\n        localized_location: \"Hamburg, Deutschland\",\n        state: \"\",\n        country: \"de\",\n        region: \"de_DE\",\n        timezone: \"Europe/Berlin\",\n      },\n      link: \"https://www.meetup.com/de-DE/jug-hamburg/events/263370107/\",\n      description:\n        \"<p>Wer Microservices in Java entwickeln mÃ¶chte, muss nicht zwangslÃ¤ufig zu Spring Boot greifen. Es lohnt ein Blick auf alternative Frameworks, die in zunehmender Anzahl verfÃ¼gbar sind und bezÃ¼glich ihrer FunktionalitÃ¤t stark aufholen. So schreitet auch die Entwicklung des MicroProfiles weiter voran. In beeindruckender Geschwindigkeit wurden zahlreiche APIs entwickelt, die (nicht nur) fÃ¼r die Entwicklung von Microservices sehr hilfreich sind.<br/>Hierzu zÃ¤hlen die UnterstÃ¼tzung von Metriken, Health Checks, Fault Tolerance und JSON Web Tokens. FÃ¼r den Einsatz im Projekt kann aus unterschiedlichen Implementierungen wie TomEE, Thorntail oder OpenLiberty gewÃ¤hlt werden. In dieser Live-Coding-Session wird der praktische Einsatz von MicroProfile anhand eines Praxisbeispiels demonstriert.<br/> <br/> <br/>Referent:<br/>Thilo Frotscher arbeitet als freiberuflicher Softwarearchitekt und Trainer. Als Experte fÃ¼r Enterprise Java und Systemintegration unterstÃ¼tzt er seine Kunden Ã¼berwiegend durch Entwicklung, Reviews oder die DurchfÃ¼hrung von Schulungen. Thilo ist (Co-)Autor mehrerer BÃ¼cher in den Bereichen Java EE, (Web) Services und Systemintegration, hat zahlreiche Fachartikel verfasst und spricht regelmÃ¤Ãig auf Fachkonferenzen und Schulungsveranstaltungen oder bei Java User Groups.</p> \",\n      visibility: \"public\",\n      member_pay_fee: false,\n    },\n  ],\n};\n\nexport { mockEvents };\n","import axios from \"axios\";\nimport { mockEvents } from \"./mock-events\";\n\nasync function getSuggestions(query) {\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    return [\n      {\n        city: \"Munich\",\n        country: \"de\",\n        localized_country_name: \"Germany\",\n        name_string: \"Munich, Germany\",\n        zip: \"meetup3\",\n        lat: 48.14,\n        lon: 11.58,\n      },\n      {\n        city: \"Munich\",\n        country: \"us\",\n        localized_country_name: \"USA\",\n        state: \"ND\",\n        name_string: \"Munich, North Dakota, USA\",\n        zip: \"58352\",\n        lat: 48.66,\n        lon: -98.85,\n      },\n    ];\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    const url =\n      \"https://api.meetup.com/find/locations?&sign=true&photo-host=public&query=\" +\n      query +\n      \"&access_token=\" +\n      token;\n    const result = await axios.get(url);\n    return result.data;\n  }\n\n  return [];\n}\n\nasync function getEvents(lat, lon) {\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    return mockEvents.events;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    let url =\n      \"https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public\" +\n      \"&access_token=\" +\n      token;\n    // lat, lon are optional and can be added with the correct access to this information (i.e., latitude and longitude)\n    if (lat && lon) {\n      url += \"&lat=\" + lat + \"&lon=\" + lon;\n    }\n    const result = await axios.get(url);\n    return result.data;\n  }\n}\n\nasync function getNewListOfEvents(lat, lon, page) {\n  if (window.location.href.startsWith(\"http://localhost\")) {\n    return mockEvents.events;\n  }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    let url =\n      \"https://api.meetup.com/find/upcoming_events?&sign=true&photo-host=public\" +\n      \"&access_token=\" +\n      token;\n\n    if (lat && lon && page) {\n      url += \"&lat=\" + lat + \"&lon=\" + lon + \"&page=\" + page;\n    }\n    const result = await axios.get(url);\n    return result.data;\n  }\n}\n\nfunction getAccessToken() {\n  const accessToken = localStorage.getItem(\"access_token\");\n\n  if (!accessToken) {\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n\n    if (!code) {\n      // Need to confirm this is the correct input\n      window.location.href =\n        \"https://secure.meetup.com/oauth2/authorize?client_id=mad5k15puih83kp0ogmb35a82b&response_type=code&redirect_uri=https://rajeski.github.io/meetup/\";\n      return null;\n    }\n\n    return getOrRenewAccessToken(\"get\", code);\n  }\n\n  const lastSavedTime = localStorage.getItem(\"last_saved_time\");\n\n  if (accessToken && Date.now() - lastSavedTime < 3600000) {\n    return accessToken;\n  }\n\n  const refreshToken = localStorage.getItem(\"refresh_token\");\n\n  return getOrRenewAccessToken(\"renew\", refreshToken);\n}\n\nasync function getOrRenewAccessToken(type, key) {\n  let url;\n  if (type === \"get\") {\n    // Lambda endpoint to get token by code\n\n    // Need to confirm this is the correct input\n\n    url =\n      \"https://hhndtqe4gl.execute-api.ap-northeast-1.amazonaws.com/dev/api/token/\" +\n      key;\n  } else if (type === \"renew\") {\n    // Lambda endpoint to get token by refresh_token\n\n    // Need to confirm this is the correct input\n\n    url =\n      \"https://hhndtqe4gl.execute-api.ap-northeast-1.amazonaws.com/dev/api/refreshtoken/\" +\n      key;\n  }\n\n  // Use Axios to make a GET request to the endpoint\n  const tokenInfo = await axios.get(url);\n\n  // Save tokens to localStorage together with a timestamp\n  localStorage.setItem(\"access_token\", tokenInfo.data.access_token);\n  localStorage.setItem(\"refresh_token\", tokenInfo.data.refresh_token);\n  localStorage.setItem(\"last_saved_time\", Date.now());\n\n  // Return the access_token\n  return tokenInfo.data.access_token;\n}\n\nexport { getSuggestions, getEvents, getAccessToken, getNewListOfEvents };\n","import React, { Component } from \"react\";\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.color = null;\n  }\n\n  getStyle = () => {\n    return {\n      color: this.color,\n    };\n  };\n\n  render() {\n    return (\n      <div className=\"Alert\">\n        <p style={this.getStyle()}>{this.props.text}</p>\n      </div>\n    );\n  }\n}\n\nclass InfoAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = \"blue\";\n  }\n}\n\nclass ErrorAlert extends Alert {\n  constructor(props) {\n    super(props);\n    this.color = \"red\";\n  }\n}\n\nexport { InfoAlert, ErrorAlert };\n","import React, { Component } from \"react\";\nimport { getSuggestions } from \"./api\";\nimport { InfoAlert } from \"./Alert\";\n\nclass CitySearch extends Component {\n  state = {\n    query: \"\",\n    suggestions: [],\n    infoText: \"\",\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ query: value });\n    getSuggestions(value).then((suggestions) => {\n      this.setState({ suggestions });\n\n      if (value && suggestions.length === 0) {\n        this.setState({\n          infoText:\n            \"Cannot find the city you are searching for. Please try another city\",\n        });\n      } else {\n        this.setState({\n          infoText: \"\",\n        });\n      }\n    });\n  };\n\n  handleItemClicked = (value, lat, lon) => {\n    this.setState({ query: value, suggestions: [] });\n    this.props.updateEvents(lat, lon);\n  };\n\n  render() {\n    return (\n      <div className=\"CitySearch\">\n        <InfoAlert text={this.state.infoText} />\n        <input\n          type=\"text\"\n          className=\"city\"\n          value={this.state.query}\n          onChange={this.handleInputChanged}\n          placeholder=\"Your City of Choice\"\n        />\n\n        <ul className=\"suggestions\">\n          {this.state.suggestions.map((item) => (\n            <li\n              key={item.name_string}\n              onClick={() =>\n                this.handleItemClicked(item.name_string, item.lat, item.lon)\n              }\n            >\n              {item.name_string}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default CitySearch;\n","import React, { Component } from \"react\";\nimport { ErrorAlert } from \"./Alert\";\n\nclass NumberOfEvents extends Component {\n  state = {\n    numberOfEvents: 32,\n    infoText: \"\",\n  };\n\n  handleInputChanged = (event) => {\n    const value = event.target.value;\n    this.setState({ numberOfEvents: value });\n    this.props.updateEvents(null, null, value);\n\n    if (value < 1) {\n      this.setState({\n        infoText: \"Number must be 1 or greater\",\n      });\n    } else {\n      this.setState({\n        infoText: \"\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"numberOfEvents\">\n        <label>Number of Events: </label>\n        <input\n          type=\"text\"\n          id=\"numberOfEvents__input\"\n          value={this.state.numberOfEvents}\n          onChange={this.handleInputChanged}\n        />\n        <ErrorAlert text={this.state.infoText} />\n      </div>\n    );\n  }\n}\n\nexport default NumberOfEvents;\n","// Application Performance Monitoring: Atatus\n\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { getEvents } from \"./api\";\n\nclass App extends Component {\n  componentDidMount() {\n    getEvents().then((response) => this.setState({ events: response }));\n  }\n\n  state = {\n    events: [],\n    page: null,\n    defaultCity: \"\",\n    lat: null,\n    lon: null,\n  };\n\n  updateEvents = (lat, lon, page) => {\n    if (lat && lon) {\n      getEvents(lat, lon, this.state.page).then((response) =>\n        this.setState({ events: response, lat, lon })\n      );\n    } else if (page) {\n      getEvents(this.state.lat, this.state.lon, page).then((response) =>\n        this.setState({ events: response, page })\n      );\n    } else {\n      getEvents(\n        this.state.lat,\n        this.state.lon,\n        this.state.page\n      ).then((response) => this.setState({ events: response }));\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch updateEvents={this.updateEvents} />\n        <NumberOfEvents\n          updateEvents={this.updateEvents}\n          numberOfEvents={this.state.events.length}\n          lat={this.state.lat}\n          lon={this.state.lon}\n        />\n        <EventList events={this.state.events} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport * as atatus from \"atatus-spa\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\natatus.config(\"3b182ffd828c4b6ba05f057c19336311\").install();\n"],"sourceRoot":""}